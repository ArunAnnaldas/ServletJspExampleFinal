

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.mockito.Mockito;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.nio.file.Files;

import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.*;

public class WebProMailTest {

    @Rule
    public TemporaryFolder temporaryFolder = new TemporaryFolder();

    private File targetDir;
    private File reportsDir;
    private File targetCucumberReport;
    private File cucumberReport;

    @Before
    public void setUp() throws Exception {
        // Create temporary directories and files
        targetDir = temporaryFolder.newFolder("target");
        reportsDir = temporaryFolder.newFolder("reports");

        targetCucumberReport = new File(targetDir, "cucumber-report.html");
        Files.createFile(targetCucumberReport.toPath());

        cucumberReport = new File(reportsDir, "cucumber-report.html");

        // Set system properties
        System.setProperty("user.dir", temporaryFolder.getRoot().getAbsolutePath());
    }

    @Test
    public void testGenerateReportCreatesReportDirectory() throws Exception {
        // Delete reports directory to test directory creation
        assertTrue(reportsDir.delete());

        WebProMail.generateReport();

        // Check if the reports directory is created
        assertTrue(new File(temporaryFolder.getRoot(), "reports").exists());
    }

    @Test
    public void testGenerateReportCopiesFile() throws Exception {
        WebProMail.generateReport();

        // Check if the file is copied
        assertTrue(new File(reportsDir, "cucumber-report.html").exists());
    }

    @Test
    public void testGenerateReportLogsIfReportDirExists() throws Exception {
        // Mock the logger
        Logger logger = Mockito.mock(Logger.class);
        WebProMail.logger = logger;

        WebProMail.generateReport();

        // Verify that the logger.info was called
        verify(logger, times(1)).info("Failed to create report directories!");
    }
}
