

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.context.junit4.SpringRunner;

import java.io.IOException;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

@RunWith(SpringRunner.class)
@SpringBootTest(classes = LocatorPropertiesTest.TestConfig.class)
public class LocatorPropertiesTest {

    @Autowired
    private LocatorProperties locatorProperties;

    @Before
    public void setUp() throws IOException {
        locatorProperties.setFiles(new String[]{"classpath:/config/locator.yaml", "classpath:/config/locator2.yaml"});
        locatorProperties.loadYamlProperties(); // Load properties to ensure values are read
    }

    @Test
    public void testLoadYamlProperties() throws IOException {
        Map<String, String> properties = locatorProperties.getValues();
        assertNotNull(properties);
        assertEquals("value1", properties.get("key1"));
        assertEquals("value2", properties.get("key2"));
    }

    @Test
    public void testGetPrefixedValue() throws IOException {
        String value = locatorProperties.getPrefixedValue("key1");
        assertEquals("value1", value);
    }

    @Test
    public void testAppUrl() throws IOException {
        assertEquals("http://dev.example.com", locatorProperties.getAppUrl());
    }

    @Configuration
    static class TestConfig {

        @Bean
        public LocatorProperties locatorProperties() {
            return new LocatorProperties();
        }
    }
}
