package com.jpmc.parent.config;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.Resource;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.beans.factory.config.YamlPropertiesFactoryBean;
import org.springframework.context.annotation.Bean;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

@Configuration
@ConfigurationProperties(prefix = "app.locator")
public class LocatorProperties {
    private Map<String, String> values = new HashMap<>();

    public Map<String, String> getValues() {
        return values;
    }

    public void setValues(Map<String, String> values) {
        this.values = values;
    }

    @Bean
    public void loadYamlProperties(@Value("${locator.files}") String[] yamlFiles) throws IOException {
        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
        for (String yamlFile : yamlFiles) {
            Resource resource = resolver.getResource(yamlFile);
            if (resource.exists()) {
                YamlPropertiesFactoryBean yamlFactory = new YamlPropertiesFactoryBean();
                yamlFactory.setResources(resource);
                Properties properties = yamlFactory.getObject();
                for (String key : properties.stringPropertyNames()) {
                    values.put(key, properties.getProperty(key));
                }
            }
        }
    }
}
