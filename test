<dependencies>
    <!-- Other dependencies -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>2.5.4</version>
        <scope>test</scope>
    </dependency>
    <!-- Add the same version of junit-jupiter-api if not already present -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>5.7.0</version>
        <scope>test</scope>
    </dependency>
</dependencies>





import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.io.IOException;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

@ExtendWith(SpringExtension.class)
@SpringBootTest
public class LocatorPropertiesTest {

    @Autowired
    private LocatorProperties locatorProperties;

    @Test
    public void testLoadYamlProperties() throws IOException {
        locatorProperties.setFiles(new String[]{"classpath:/config/locator.yaml", "classpath:/config/locator2.yaml"});
        Map<String, String> properties = locatorProperties.loadYamlProperties(locatorProperties.getFiles());
        assertNotNull(properties);
        assertEquals("value1", properties.get("key1"));
        assertEquals("value2", properties.get("key2"));
    }

    @Test
    public void testGetPrefixedValue() throws IOException {
        locatorProperties.setFiles(new String[]{"classpath:/config/locator.yaml", "classpath:/config/locator2.yaml"});
        locatorProperties.setValues(locatorProperties.loadYamlProperties(locatorProperties.getFiles()));
        String value = locatorProperties.getPrefixedValue("key1");
        assertEquals("value1", value);
    }

    @Test
    public void testAppUrl() throws IOException {
        locatorProperties.setFiles(new String[]{"classpath:/config/locator.yaml", "classpath:/config/locator2.yaml"});
        locatorProperties.setValues(locatorProperties.loadYamlProperties(locatorProperties.getFiles()));
        assertEquals("http://dev.example.com", locatorProperties.getAppUrl());
    }
}
