import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import com.microsoft.playwright.BrowserContext;
import com.microsoft.playwright.Page;
import net.jpmc.tesautotools.spartan.webpro.core.config.BrowserCategory;
import net.jpmc.tesautotools.spartan.webpro.core.config.TESPlayriteProperties;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.slf4j.Logger;

public class HooksTest {

    @InjectMocks
    private Hooks hooks;

    @Mock
    private Logger logger;

    @Mock
    private BrowserFactory browserFactory;

    @Mock
    private TESPlayriteProperties tesPlayriteProperties;

    @Mock
    private Page page;

    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetPage() {
        // Mocking the behavior of tesPlayriteProperties
        when(tesPlayriteProperties.getPlayrite()).thenReturn(new TESPlayriteProperties.Playrite());
        when(tesPlayriteProperties.getPlayrite().isRemoteMode()).thenReturn(true);

        Page result = hooks.getPage();

        assertNull(result);
    }

    @Test
    public void testClose() {
        hooks.close();

        // Verify that the close method of Page is called
        verify(page).close();
        // Verify that the cleanContext method of BrowserFactory is called
        verify(browserFactory).cleanContext();
    }
}
