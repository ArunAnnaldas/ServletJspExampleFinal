import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.core.env.PropertySource;
import org.springframework.core.io.Resource;
import org.springframework.core.io.support.EncodedResource;

import java.io.IOException;
import java.util.Properties;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class YamlPropertySourceFactoryTest {

    @Mock
    private EncodedResource encodedResource;

    @Mock
    private Resource resource;

    private YamlPropertySourceFactory factory;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        factory = new YamlPropertySourceFactory();
    }

    @Test
    public void testCreatePropertySource() throws IOException {
        when(encodedResource.getResource()).thenReturn(resource);
        when(resource.getFilename()).thenReturn("test.yaml");

        Properties properties = new Properties();
        properties.setProperty("testKey", "testValue");

        YamlPropertiesFactoryBean yamlFactory = mock(YamlPropertiesFactoryBean.class);
        when(yamlFactory.getObject()).thenReturn(properties);

        PropertySource<?> propertySource = factory.createPropertySource(null, encodedResource);
        
        assertNotNull(propertySource);
        assertTrue(propertySource.containsProperty("testKey"));
        assertEquals("testValue", propertySource.getProperty("testKey"));
    }
}
