import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import com.microsoft.playwright.Browser;
import com.microsoft.playwright.BrowserContext;
import com.microsoft.playwright.Page;
import com.microsoft.playwright.Playwright;
import net.jpmc.tesautotools.spartan.webpro.core.config.BrowserCategory;
import net.jpmc.tesautotools.spartan.webpro.core.config.TESPlayriteProperties;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class BrowserFactoryTest {

    @InjectMocks
    private BrowserFactory browserFactory;

    @Mock
    private TESPlayriteProperties tesPlayriteProperties;

    @Mock
    private Playwright playwright;

    @Mock
    private Browser browser;

    @Mock
    private BrowserContext browserContext;

    @Mock
    private Page page;

    @Before
    public void setup() {
        MockitoAnnotations.initMocks(this);
        when(playwright.chromium()).thenReturn(browser);
        when(browser.newContext()).thenReturn(browserContext);
        when(browserContext.newPage()).thenReturn(page);
    }

    @Test
    public void testGetBrowser() {
        when(tesPlayriteProperties.getPlayrite().getBrowser()).thenReturn(BrowserCategory.chrome);
        when(tesPlayriteProperties.getPlayrite().isHeadless()).thenReturn(true);

        Page result = browserFactory.getBrowser(tesPlayriteProperties.getPlayrite().getBrowser(), tesPlayriteProperties.getPlayrite().isHeadless());

        assertNotNull(result);
    }

    @Test
    public void testCleanContext() {
        browserFactory.cleanContext();

        verify(browserContext).close();
        verify(browser).close();
        verify(playwright).close();
    }

    @Test
    public void testCountOfBrowserContext() {
        int count = browserFactory.countOfBrowserContext(browser);

        assertEquals(1, count);
    }

    @Test
    public void testIsBrowserConnected() {
        boolean isConnected = browserFactory.isBrowserConnected(browser);

        assertTrue(isConnected);
    }
}
